# Use rocker/shiny-verse as base image (includes Shiny + tidyverse)
FROM rocker/shiny-verse:latest

# Arguments for user configuration
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG USER_NAME=bloodstream

# Install system dependencies including Quarto
RUN apt-get update && apt-get install -y \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libgit2-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Quarto
RUN wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.3.450/quarto-1.3.450-linux-amd64.deb \
    && dpkg -i quarto-1.3.450-linux-amd64.deb \
    && rm quarto-1.3.450-linux-amd64.deb

# Install additional R packages required by bloodstream
RUN install2.r --error --skipinstalled \
    optparse \
    remotes \
    && rm -rf /tmp/downloaded_packages/ /tmp/*.rds

# Install kinfitr from GitHub
RUN R -e "remotes::install_github('mathesong/kinfitr', dependencies = TRUE)"

# Create user and group with specified IDs
RUN if ! getent group ${GROUP_ID}; then groupadd -g ${GROUP_ID} ${USER_NAME}; fi && \
    if ! getent passwd ${USER_ID}; then useradd -u ${USER_ID} -g ${GROUP_ID} -m -s /bin/bash ${USER_NAME}; fi

# Create app directory
WORKDIR /app

# Copy the bloodstream app package files
COPY . /app/

# Install the bloodstream package
RUN R -e "devtools::install('.', dependencies = TRUE)"

# Copy Docker-specific scripts
COPY docker/run_bloodstream.R /app/
RUN chmod +x /app/run_bloodstream.R

# Change ownership of app directory to non-root user (use UID:GID to handle existing users)
RUN chown -R ${USER_ID}:${GROUP_ID} /app

# Create data directory and set permissions
RUN mkdir -p /data && chown -R ${USER_ID}:${GROUP_ID} /data

# Switch to non-root user
USER ${USER_ID}:${GROUP_ID}

# Expose port 3838 for Shiny apps
EXPOSE 3838

# Set the entry point
ENTRYPOINT ["/app/run_bloodstream.R"]
